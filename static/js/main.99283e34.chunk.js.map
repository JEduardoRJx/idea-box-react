{"version":3,"sources":["components/form/Form.js","components/card/Card.js","components/ideascontainer/IdeasContainer.js","app/App.js","index.js"],"names":["Form","submitIdea","numOfIdeas","useState","id","title","description","fav","newIdea","createNewIdea","handleChange","e","target","name","value","htmlFor","type","placeholder","onChange","onClick","renderButton","Card","idea","deleteIdea","toggleFavorite","favorite","className","key","IdeasContainer","ideas","viewFavorites","favIdeas","filter","length","map","renderFavoriteCards","renderCards","App","updateViewFavorites","updateIdeas","updatedIdeaList","ReactDOM","render","document","getElementById"],"mappings":"yVAkDeA,G,MA/CF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACVC,mBAAS,CACxCC,GAAI,KACJC,MAAO,GACPC,YAAa,GACbC,KAAK,IALoC,mBACpCC,EADoC,KAC3BC,EAD2B,KAQrCC,EAAe,SAACC,GACpBF,EAAc,eAAID,EAAL,eAAeG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAmBvD,OACE,8BACE,2BAAOC,QAAQ,SAAf,UACA,2BAAOC,KAAK,OACVF,MAAON,EAAQH,MACfY,YAAY,cACZJ,KAAK,QACLK,SAAU,SAAAP,GAAC,OAAID,EAAaC,MAC9B,2BAAOI,QAAQ,eAAf,gBACA,8BAAUC,KAAK,OACbF,MAAON,EAAQF,YACfW,YAAY,oBACZJ,KAAK,cACLK,SAAU,SAAAP,GAAC,OAAID,EAAaC,MApBb,WACnB,GAAsB,KAAlBH,EAAQH,OAAwC,KAAxBG,EAAQF,YAClC,OAAO,4BAAQU,KAAK,SAClBG,QAAS,kBAXblB,EAAW,eAAIO,EAAL,CAAcJ,GAAIF,EAAa,UACzCO,EAAc,CACZL,GAAI,KACJC,MAAO,GACPC,YAAa,OAMN,eAmBJc,MCzBMC,G,YAjBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAC1BC,EAAWH,EAAKf,IAAM,WAAa,KAEzC,OACE,6BAASmB,UAAWD,EAAUE,IAAKL,EAAKlB,IACtC,4BAAKkB,EAAKjB,OACV,2BAAIiB,EAAKhB,aACT,6BACE,4BAAQU,KAAK,SACXG,QAAS,kBAAMK,EAAeF,EAAKlB,MADrC,YAEA,4BAAQY,KAAK,SACXG,QAAU,kBAAMI,EAAWD,EAAKlB,MADlC,cC6BOwB,EAtCQ,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAON,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,eAAgBM,EAAoB,EAApBA,cA+B3D,OACE,6BAASJ,UAAU,0BAhBD,SAAAG,GAClB,OAAIC,EAfsB,SAAAD,GAC1B,IAAME,EAAWF,EAAMG,QAAO,SAAAV,GAAI,OAAgB,IAAbA,EAAKf,OAC1C,OAAIwB,EAASE,OACJF,EAASG,KAAI,SAAAZ,GAAI,OACtB,kBAAC,EAAD,CAAMK,IAAKL,EAAKlB,GACdkB,KAAMA,EACNC,WAAYA,EACZC,eAAgBA,OAGb,oDAMAW,CAAoBN,GAClBA,EAAMI,OACRJ,EAAMK,KAAI,SAAAZ,GAAI,OACnB,kBAAC,EAAD,CAAMK,IAAKL,EAAKlB,GACdkB,KAAMA,EACNC,WAAYA,EACZC,eAAgBA,OAGb,sDAMNY,CAAYP,KCmBJQ,EAnDH,WAAO,IAAD,EAE6BlC,oBAAS,GAFtC,mBAET2B,EAFS,KAEMQ,EAFN,OAGanC,mBAAS,CACpC,CAAEC,GAAI,EAAGC,MAAO,YAAaC,YAAa,mCAAoCmB,UAAU,GACxF,CAAErB,GAAI,EAAGC,MAAO,YAAaC,YAAa,sBAAuBC,KAAK,GACtE,CAAEH,GAAI,EAAGC,MAAO,eAAgBC,YAAa,oCAAqCC,KAAK,KANzE,mBAGTsB,EAHS,KAGFU,EAHE,KAiChB,OACE,oCACE,6BAASb,UAAU,gBACjB,uCACA,kBAAC,EAAD,CAAMzB,WA5BO,SAACO,GAClB+B,EAAY,GAAD,mBAAKV,GAAL,CAAYrB,MA4BjBN,WAAY2B,EAAMI,SACpB,4BAAQP,UAAU,UAChBV,KAAK,SACLG,QAAS,WAXfmB,GAAqBR,KASjB,mBAIA,kBAAC,EAAD,CAAgBD,MAAOA,EACrBN,WA/BW,SAACnB,GAClB,IAAMoC,EAAkBX,EAAMG,QAAO,SAAAV,GAAI,OAAIA,EAAKlB,KAAOA,KACzDmC,EAAY,YAAIC,KA8BVhB,eA3Be,SAACpB,GACtB,IAAIoC,EAAkBX,EAAMK,KAAI,SAAAZ,GAChC,OAAIA,EAAKlB,KAAOA,EACP,eAAIkB,EAAX,CAAiBf,KAAMe,EAAKf,MAErBe,KAGTiB,EAAY,YAAIC,KAoBVV,cAAeA,MC9CzBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.99283e34.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Form.scss';\n\nconst Form = ({ submitIdea, numOfIdeas }) => {\n  const [newIdea, createNewIdea] = useState({\n    id: null,\n    title: '',\n    description: '',\n    fav: false\n  });\n\n  const handleChange = (e) => {\n    createNewIdea({...newIdea, [e.target.name]: e.target.value});\n  }\n\n  const addIdea = () => {\n    submitIdea({...newIdea, id: numOfIdeas + 1 });\n    createNewIdea({\n      id: null,\n      title: '',\n      description: ''\n    });\n  }\n\n  const renderButton = () => {\n    if (newIdea.title !== '' && newIdea.description !== '') {\n      return <button type='button'\n        onClick={() => addIdea()}>Create Idea</button>;\n    }\n  }\n\n  return (\n    <form>\n      <label htmlFor='title'>Title:</label>\n      <input type='text' \n        value={newIdea.title}\n        placeholder='Enter Title'\n        name='title'\n        onChange={e => handleChange(e)} />\n      <label htmlFor='description'>Description:</label>\n      <textarea type='text' \n        value={newIdea.description}\n        placeholder='Enter Description'\n        name='description'\n        onChange={e => handleChange(e)} />\n        {renderButton()}\n    </form>\n  );\n}\n\nexport default Form;","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({ idea, deleteIdea, toggleFavorite }) => {\n  const favorite = idea.fav ? 'favorite' : null;\n\n  return (\n    <article className={favorite} key={idea.id}>\n      <h2>{idea.title}</h2>\n      <p>{idea.description}</p>\n      <div>\n        <button type='button'\n          onClick={() => toggleFavorite(idea.id)}>Favorite</button>\n        <button type='button'\n          onClick={ () => deleteIdea(idea.id)}>Delete</button>\n      </div>\n    </article>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport './IdeasContainer.scss';\nimport Card from '../card/Card';\n\nconst IdeasContainer = ({ ideas, deleteIdea, toggleFavorite, viewFavorites }) => {\n\n  const renderFavoriteCards = ideas => {\n    const favIdeas = ideas.filter(idea=> idea.fav === true);\n    if (favIdeas.length) {\n      return favIdeas.map(idea =>\n        <Card key={idea.id}\n          idea={idea}\n          deleteIdea={deleteIdea}\n          toggleFavorite={toggleFavorite} />\n      );\n    } else {\n      return <h1>Favorite Some Ideas!</h1>;\n    }\n  }\n\n  const renderCards = ideas => {\n    if (viewFavorites) {\n      return renderFavoriteCards(ideas);\n    } else if (ideas.length) {\n      return ideas.map(idea=> \n        <Card key={idea.id}\n          idea={idea}\n          deleteIdea={deleteIdea}\n          toggleFavorite={toggleFavorite} />\n      );\n    } else {\n      return <h1>No Ideas! Create Some!</h1>;\n    }\n  }\n\n  return (\n    <section className='ideascontainer-section'>\n      {renderCards(ideas)}\n    </section>\n  )\n}\n\nexport default IdeasContainer;","import React, { useState } from 'react';\nimport './App.scss';\nimport Form from '../components/form/Form';\nimport IdeasContainer from '../components/ideascontainer/IdeasContainer';\n\nconst App = () => {\n  \n  const [viewFavorites, updateViewFavorites] = useState(false);\n  const [ideas, updateIdeas] = useState([\n    { id: 1, title: 'Bake Cake', description: 'Need to use all my eggs and milk', favorite: false },\n    { id: 2, title: 'Evil Plan', description: 'Take Over the World', fav: true },\n    { id: 3, title: 'Write a Book', description: 'Write a childs book about planets', fav: false },\n  ]);\n\n  const submitIdea = (newIdea) => {\n    updateIdeas([...ideas, newIdea]);\n  }\n\n  const deleteIdea = (id) => {\n    const updatedIdeaList = ideas.filter(idea => idea.id !== id);\n    updateIdeas([...updatedIdeaList]);\n  }\n\n  const toggleFavorite = (id) => {\n    let updatedIdeaList = ideas.map(idea => {\n    if (idea.id === id) {\n      return {...idea, fav: !idea.fav }\n    } else {\n      return idea\n    }\n    });\n    updateIdeas([...updatedIdeaList])\n  }\n\n  const toggleViewFavorites = () => {\n    updateViewFavorites(!viewFavorites);\n  }\n\n  return (\n    <>\n      <section className='form-wrapper'>\n        <h1>IdeaBox</h1>\n        <Form submitIdea={submitIdea}\n          numOfIdeas={ideas.length} />\n        <button className='fav-btn'\n          type='button'\n          onClick={() => toggleViewFavorites()}>View Favorites</button>\n      </section>\n        <IdeasContainer ideas={ideas} \n          deleteIdea={deleteIdea} \n          toggleFavorite={toggleFavorite} \n          viewFavorites={viewFavorites} />\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from '../src/app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}